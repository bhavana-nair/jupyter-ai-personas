name: Run Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10  
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
      fail-fast: false  

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio pytest-tornado
        pip install -e ".[all]"
        
    - name: Create event_loop fixture
      run: |
        mkdir -p tests
        cat > tests/conftest_event_loop.py << 'EOF'
        import pytest
        import asyncio

        @pytest.fixture
        def event_loop():
            """Create an instance of the default event loop for each test."""
            loop = asyncio.get_event_loop_policy().new_event_loop()
            yield loop
            loop.close()
        EOF
        
        echo "Created event_loop fixture in tests/conftest_event_loop.py"
        ls -la tests/
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}